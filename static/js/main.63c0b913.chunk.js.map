{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/Errorbound.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","id","name","email","className","src","alt","CardList","robots","map","user","i","SearchBox","searchField","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","Errorboundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filteredArray","filter","robot","toLowerCase","includes","length","Errorbound","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAceA,EAbH,SAACC,GACT,IAAOC,EAAeD,EAAfC,GAAGC,EAAYF,EAAZE,KAAKC,EAAOH,EAAPG,MACf,OAEI,cADA,CACA,OAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAG,+BAA2BJ,EAA3B,iBAA8CK,IAAI,UAC1D,gCACI,6BAAKJ,IACL,4BAAIC,WCaLI,EAnBC,SAACP,GACb,IAAKQ,EAAQR,EAARQ,OAEL,OACI,8BAEQA,EAAOC,KAAI,SAACC,EAAKC,GACb,OACI,cAAC,EAAD,CACIV,GAAIO,EAAOG,GAAGV,GACdC,KAAMM,EAAOG,GAAGT,KAChBC,MAAOK,EAAOG,GAAGR,cCD9BS,EAXG,SAAC,GAA+B,EAA9BC,YAA+B,IAAnBC,EAAkB,EAAlBA,aAC5B,OACI,qBAAKV,UAAU,MAAf,SACI,uBACAA,UAAU,mCACVW,KAAK,SACLC,YAAY,cACZC,SAAUH,OCAPI,G,MAPF,SAAClB,GACV,OACI,qBAAKmB,MAAO,CAACC,UAAU,SAASC,OAAO,kBAAkBC,OAAO,SAAhE,SACKtB,EAAMuB,aCcJC,E,kDAhBX,WAAYxB,GAAO,IAAD,8BACd,cAAMA,IACDyB,MAAM,CACPC,UAAU,GAHA,E,qDAMlB,SAAkBC,EAAMC,GACpBC,KAAKC,SAAS,CAACJ,UAAS,M,oBAE5B,WACI,OAAGG,KAAKJ,MAAMC,SACH,yDAEJG,KAAK7B,MAAMuB,a,GAdCQ,aC8CZC,E,kDAvCX,aAAc,IAAD,8BACT,gBAWJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAACK,YAAYD,EAAME,OAAOC,SAXxC,EAAKZ,MAAQ,CACTjB,OAAQ,GACR2B,YAAY,IAJP,E,qDAOb,WAAoB,IAAD,OACfG,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAE,EAAKZ,SAAS,CAACtB,OAAOkC,S,oBAKvC,WACI,MAA2Bb,KAAKJ,MAAzBjB,EAAP,EAAOA,OAAO2B,EAAd,EAAcA,YACRQ,EAAenC,EAAOoC,QAAQ,SAAAC,GAChC,OAAOA,EAAM3C,KAAK4C,cAAcC,SAASZ,EAAYW,kBAEzD,OAAQtC,EAAOwC,OAGP,sBAAK5C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAce,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAACgB,EAAD,UACI,cAAC,EAAD,CAAUzC,OAASmC,WAPnC,6C,GAtBMZ,aCIHmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACG,cAAC,EAAD,MAEHC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.63c0b913.chunk.js","sourcesContent":["import React from \"react\";\r\nconst Card= (props)=>{\r\n    const {id,name,email}=props;\r\n    return(\r\n        //dib= display in block, br3 = border radius, pa= padding, ma= margin, grow= for animation, bw= border width, tc= text center\r\n        <div className=\"tc grow bg-light-green br3 pa3 ma2 dib bw2 shadow-5\">\r\n            <img src= {`https://robohash.org/${id}?size=200x200`} alt=\"robot\" />\r\n            <div>\r\n                <h4>{name}</h4>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList= (props)=>{\r\n    let {robots}=props;\r\n\r\n    return(\r\n        <div>\r\n            {\r\n                robots.map((user,i)=>{\r\n                    return (\r\n                        <Card \r\n                            id={robots[i].id}\r\n                            name={robots[i].name} \r\n                            email={robots[i].email}\r\n                        />\r\n                    );\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchField,searchChange}) => {\r\n    return(\r\n        <div className='pa2'>\r\n            <input \r\n            className='pa3 ba b--green bg-lightest-blue' \r\n            type=\"search\" \r\n            placeholder=\"search here\"\r\n            onChange={searchChange}/>\r\n        </div>\r\n    );\r\n}\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll=(props)=>{\r\n    return(\r\n        <div style={{overflowY:'scroll',border:'1px solid black',height:'400px'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\nexport default Scroll;","import React,{Component} from 'react';\r\n\r\nclass Errorboundry extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            hasError: false\r\n        }\r\n    }\r\n    componentDidCatch(error,info){\r\n        this.setState({hasError:true});\r\n    }\r\n    render(){\r\n        if(this.state.hasError){\r\n            return <h1>Oops . This is not good</h1>\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\nexport default Errorboundry;","import React, { Component } from 'react';\r\n\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport './App.css';\r\nimport Scroll from '../components/Scroll';\r\nimport Errorboundry from './Errorbound';\r\n\r\nclass App extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            robots: [],\r\n            searchfield:'',\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n        .then(response=> response.json())\r\n        .then(users=>this.setState({robots:users}));\r\n    }\r\n    onSearchChange = (event)=>{\r\n        this.setState({searchfield:event.target.value });\r\n    }\r\n    render(){\r\n        const {robots,searchfield}=this.state;\r\n        const filteredArray= robots.filter( robot=>{\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        });\r\n        return !robots.length ?\r\n            <h1>Loading</h1>:\r\n            (\r\n                <div className=\"tc\">\r\n                    <h1 className=\"f1\">RoboFriends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange}/>\r\n                    <Scroll>\r\n                        <Errorboundry>\r\n                            <CardList robots= {filteredArray} />\r\n                        </Errorboundry>\r\n                    </Scroll>\r\n                        \r\n                    {/* State use as this.props. */}\r\n                </div>  \r\n            );\r\n    }\r\n\r\n    \r\n}\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'tachyons';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n     <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}